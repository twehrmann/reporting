Estrato<-substr(x = AreasEstratos[,AREAS_ESTRATOS_KEY],
start = 1, stop =as.integer(gregexpr("-",AreasEstratos[,AREAS_ESTRATOS_KEY]))-2)
AreasEstratos
AreasEstratos$madmex_05_10
AreasEstratos$areas_cves4_cves5_pmn
AreaHa<-AreasEstratos$areas_cves4_cves5_pmn
AreasEstratos<-data.frame(Estrato,AreaHa)
View(AreasEstratos)
#####################################Se imputa el ?rea de muestreo a nivel de sitio################################
ai=rep(0.04,nrow(BaseT1T2))
t1=BaseT1T2$FechaT1
t2=BaseT1T2$FechaT2
conglomerado=BaseT1T2$folio.x
estrato=BaseT1T2$EstTrnsT1T2
y_t1=BaseT1T2$CarbAerVivT1
y_t2=BaseT1T2$CarbAerVivT2
#rm(BaseT1T2)
resultados=Cambios(y_t1=y_t1, y_t2=y_t2, t1=t1, t2=t2, conglomerado=conglomerado,
estrato=estrato, ai=ai, AreasEstratos=AreasEstratos)
View(AreasEstratos)
resultados = 0
if (resultados==0) {
return(new("ResultSet",
result=df,
module="Estimadores de razón",
variable=FE_VAR,
status=FALSE))
}
resultados=Cambios(y_t1=y_t1, y_t2=y_t2, t1=t1, t2=t2, conglomerado=conglomerado,
estrato=estrato, ai=ai, AreasEstratos=AreasEstratos)
resultados
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","MADMEX")))
library(logging)
basicConfig()
setwd("/Volumes/SSD2go_tw/conafor/reporting/cliente_delta_carbon")
DEBUG=TRUE
source("tools.R")
source("db_access.R")
source("calc_changes.R")
inputData = getBaseData()
FULL = !DEBUG
fe_variable_gui="carbono_arboles"
lcc_type_gui="BUR"
print("GUI setting")
print(fe_variable_gui)
print(lcc_type_gui)
FE_VAR = fe_variable_gui
if (lcc_type_gui == "BUR") {
AreasEstratos<-inputData@AreasEstratosBUR
EstratosBUR<-inputData@EstratosBUR
EstratosIPCC<-inputData@Estratos_BUR_IPCC
AREAS_ESTRATOS_KEY = "cves4_cves5_pmn"
ESTRATOS_IPCC = "pf_redd_ipcc_2003"
ESTRATO1_KEY = "clave_pmn4"
ESTRATO2_KEY = "clave_pmn5"
} else if (lcc_type_gui == "MADMEX") {
AreasEstratos<-inputData@AreasEstratosMADMEX
EstratosBUR<-inputData@EstratosMADMEX
EstratosIPCC<-inputData@EstratosMADMEX_IPCC
AREAS_ESTRATOS_KEY = "madmex_05_10"
ESTRATOS_IPCC = "pf_redd_ipcc_2003"
ESTRATO1_KEY = "madmex_05"
ESTRATO2_KEY = "madmex_10"
}
BaseT1<-inputData@BaseT1
BaseT2<-inputData@BaseT2
BaseT1<-BaseT1[!(is.na(BaseT1$folio)),]
BaseT2<-BaseT2[!(is.na(BaseT2$folio)),]
BaseT1_orig<-BaseT1
BaseVars = getAllVariables(BaseT1_orig)
##############################Se crean bases de "T1" y "T2 s?lo con las variables de inter?s"###################################
fe_variable=0
if (fe_variable_gui %in% names(BaseVars)) {
print (paste("Using EF variable:", fe_variable_gui, " index:", BaseVars[[fe_variable_gui]]))
BaseT1dep<-data.frame(folio=BaseT1$folio, sitioT1=BaseT1$sitio, FechaT1=BaseT1$levantamiento_fecha_ejecucion,
tipificacionT1=BaseT1$tipificacion, carbono_arbolesT1=BaseT1[,fe_variable_gui])
BaseT2dep<-data.frame(folio=BaseT2$folio, sitioT2=BaseT2$sitio, FechaT2=BaseT2$levantamiento_fecha_ejecucion,
tipificacionT2=BaseT2$tipificacion, carbono_arbolesT2=BaseT2[,fe_variable_gui])
} else {
print(paste("Cannot find EF variable:",fe_variable_gui))
df <- data.frame(test=character())
return(new("ResultSet",
result=df,
module="Estimadores de razón",
variable=FE_VAR,
status=FALSE))
}
##############################En cada base se cre una variable de "Conglomerado-Sito"###################################
BaseT1dep$CongSitioT1<-paste(as.character(BaseT1dep$folio),"-",as.character(BaseT1dep$sitioT1))
BaseT2dep$CongSitioT2<-paste(as.character(BaseT2dep$folio),"-",as.character(BaseT2dep$sitioT2))
##################################Se unen las bases "BaseT1dep" y "BaseT2dep"#######################################
BaseT1T2<- merge(BaseT1dep, BaseT2dep, by.x = "CongSitioT1", by.y = "CongSitioT2",all=TRUE)
###################Se identifica el estrato "del BUR" al que pertenece cada sitio en T1 y t2#######################
#Se seleccionan las variables de inter?s de la base de "Estratos"
EstratosBURdep<-data.frame(folio=EstratosBUR$numnal, sitio=EstratosBUR$sitio, EstratoSlV=EstratosBUR[,ESTRATO1_KEY],
EstratoSV=EstratosBUR[,ESTRATO2_KEY])
#En la base "EstratosBURdep" se crea una nueva variable de "Cong-Sitio"
EstratosBURdep$CongSitio<-paste(as.character(EstratosBURdep$folio),"-",as.character(EstratosBURdep$sitio))
#Se unen las bases "BaseT1T2" y "EstratosBURdep"
BaseT1T2<- merge(BaseT1T2, EstratosBURdep, by.x = "CongSitioT1", by.y = "CongSitio",all=TRUE)
###################Se identifica el estrato "del IPCC" al que pertenece cada sitio en T1 y t2#######################
BaseT1T2<- merge(BaseT1T2, EstratosIPCC, by.x = "EstratoSlV", by.y = "pf_redd_clave_subcat_leno_pri_sec",all=TRUE)
#############################Se filtran los sitios reportados como "Iniciales" en T1 y T2############################
#se filtra todas las UMP cuya "tipificaci?n" es "Inicial", "Reemplazo" o "Monitoreo" en T1
BaseT1T2=BaseT1T2[BaseT1T2$tipificacionT1=="Inicial" |
#              BaseT1T2$tipificacionT1=="Reemplazo" |
BaseT1T2$tipificacionT1=="Monitoreo",]
#se filtra todas las USM cuya "tipificaci?n" es "Inicial", "Reemplazo" o "Omitido-Remuestreo" en T2
BaseT1T2=BaseT1T2[BaseT1T2$tipificacionT2=="Inicial" |
#              BaseT1T2$tipificacionT2=="Reemplazo" |
BaseT1T2$tipificacionT2=="Omitido-Remuestreo" & BaseT1T2$tipificacionT1=="Monitoreo" & BaseT1T2[,ESTRATOS_IPCC]=="Praderas",]
######################Se filtran las "Tierras Forestales" o "Praderas" definidas por el IPCC########################
BaseT1T2=BaseT1T2[BaseT1T2[,ESTRATOS_IPCC]=="Tierras Forestales" | BaseT1T2[,ESTRATOS_IPCC]=="Praderas",]
#############Se imputan los 0 en los conglomerdos reportados "Monitoreo" y que ten?an "Pradera" en T1 y T2#########
BaseT1T2$CarbAerVivT1<-ifelse(BaseT1T2$tipificacionT1=="Monitoreo" & BaseT1T2[,ESTRATOS_IPCC]=="Praderas",0,
as.numeric(as.character(BaseT1T2$carbono_arbolesT1)))
BaseT1T2$CarbAerVivT2<-ifelse(BaseT1T2$tipificacionT1=="Monitoreo" & BaseT1T2[,ESTRATOS_IPCC]=="Praderas"&
BaseT1T2$tipificacionT2=="Omitido-Remuestreo",0, as.numeric(as.character(BaseT1T2$carbono_arbolesT2)))
##############Se filtran los sitios que en T1 y/o en T2 contienen valores "NA" en el carbono estimado#############
#Se filtran todos los "NA" de la variable "CarbAerViv" en T1
BaseT1T2<-BaseT1T2[!(is.na(BaseT1T2$CarbAerVivT1)),]
#Se filtran todos los "NA" de la variable "CarbAerVivT2correg" en T2
BaseT1T2<-BaseT1T2[!(is.na(BaseT1T2$CarbAerVivT2)),]
##############################Se filtran las transiciones de las zonas de permanencia###############################
#Se crea una variable de "Estratos de Transici?n"
BaseT1T2$EstTrnsT1T2<-paste(as.character(BaseT1T2$EstratoSlV),"-",as.character(BaseT1T2$EstratoSV))
#Se fltran los sitios que no son de permanencia
if (lcc_type_gui == "BUR") {
BaseT1T2=BaseT1T2[
BaseT1T2$EstTrnsT1T2=="ACUI - ACUI"  |
BaseT1T2$EstTrnsT1T2=="AGR - AGR"  |
BaseT1T2$EstTrnsT1T2=="AH - AH"  |
BaseT1T2$EstTrnsT1T2=="BC - BC"  |
BaseT1T2$EstTrnsT1T2=="BCO/P - BCO/P"  |
BaseT1T2$EstTrnsT1T2=="BCO/S - BCO/S"  |
BaseT1T2$EstTrnsT1T2=="BE/P - BE/P"  |
BaseT1T2$EstTrnsT1T2=="BE/S - BE/S"  |
BaseT1T2$EstTrnsT1T2=="BM/P - BM/P"  |
BaseT1T2$EstTrnsT1T2=="BM/S - BM/S"  |
BaseT1T2$EstTrnsT1T2=="EOTL/P - EOTL/P"  |
BaseT1T2$EstTrnsT1T2=="EOTL/S - EOTL/S"  |
BaseT1T2$EstTrnsT1T2=="EOTnL/P - EOTnL/P"  |
BaseT1T2$EstTrnsT1T2=="H2O - H2O"  |
BaseT1T2$EstTrnsT1T2=="MXL/P - MXL/P"  |
BaseT1T2$EstTrnsT1T2=="MXL/S - MXL/S"  |
BaseT1T2$EstTrnsT1T2=="MXnL/P - MXnL/P"  |
BaseT1T2$EstTrnsT1T2=="MXnL/S - MXnL/S"  |
BaseT1T2$EstTrnsT1T2=="OT - OT"  |
BaseT1T2$EstTrnsT1T2=="P - P"  |
BaseT1T2$EstTrnsT1T2=="SC/P - SC/P"  |
BaseT1T2$EstTrnsT1T2=="SC/S - SC/S"  |
BaseT1T2$EstTrnsT1T2=="SP/P - SP/P"  |
BaseT1T2$EstTrnsT1T2=="SP/S - SP/S"  |
BaseT1T2$EstTrnsT1T2=="SSC/P - SSC/P"  |
BaseT1T2$EstTrnsT1T2=="SSC/S - SSC/S"  |
BaseT1T2$EstTrnsT1T2=="VHL/P - VHL/P"  |
BaseT1T2$EstTrnsT1T2=="VHL/S - VHL/S"  |
BaseT1T2$EstTrnsT1T2=="VHnL/P - VHnL/P",]
} else if (lcc_type_gui == "MADMEX") {
BaseT1T2=BaseT1T2[
BaseT1T2$EstTrnsT1T2=="ACUI;H2O - ACUI;H2O"  |
BaseT1T2$EstTrnsT1T2=="ADV;DV - ADV;DV"  |
BaseT1T2$EstTrnsT1T2=="AH;ZU - AH;ZU"  |
BaseT1T2$EstTrnsT1T2=="BA;BB;BS;VSA/BA;VSA/BB;VSA/BS - BA;BB;BS;VSA/BA;VSA/BB;VSA/BS"  |
BaseT1T2$EstTrnsT1T2=="BC;BI - BC;BI"  |
BaseT1T2$EstTrnsT1T2=="BG;BQ;BQP;VSA/BG;VSA/BQ;VSA/BQP - BG;BQ;BQP;VSA/BG;VSA/BQ;VSA/BQP"  |
BaseT1T2$EstTrnsT1T2=="BJ;BP;BPQ;MJ;VSA/BJ;VSA/BP;VSA/BPQ - BJ;BP;BPQ;MJ;VSA/BJ;VSA/BP;VSA/BPQ"  |
BaseT1T2$EstTrnsT1T2=="BM;SBP;VSA/BM;VSA/SBP - BM;SBP;VSA/BM;VSA/SBP"  |
BaseT1T2$EstTrnsT1T2=="HA;HAP;HAS;HP;HS;HSP;RA;RAP;RAS;RP;RS;RSP;TA;TAP;TAS;TP;TS;TSP - HA;HAP;HAS;HP;HS;HSP;RA;RAP;RAS;RP;RS;RSP;TA;TAP;TAS;TP;TS;TSP"  |
BaseT1T2$EstTrnsT1T2=="MC;VSa/MC;VSh/MC - MC;VSa/MC;VSh/MC"  |
BaseT1T2$EstTrnsT1T2=="MDM;MKX;VG;VSa/MDM;VSa/MKX;VSa/VG;VSh/MDM;VSh/MKX;VSh/VG - MDM;MKX;VG;VSa/MDM;VSa/MKX;VSa/VG;VSh/MDM;VSh/MKX;VSh/VG"  |
BaseT1T2$EstTrnsT1T2=="MDR;VSa/MDR;VSh/MDR - MDR;VSa/MDR;VSh/MDR"  |
BaseT1T2$EstTrnsT1T2=="MET;VSa/MET;VSh/MET - MET;VSa/MET;VSh/MET"  |
BaseT1T2$EstTrnsT1T2=="MK;MKE;MSM;VSA/MK;VSA/MKE;VSA/MSM - MK;MKE;MSM;VSA/MK;VSA/MKE;VSA/MSM"  |
BaseT1T2$EstTrnsT1T2=="ML - ML"  |
BaseT1T2$EstTrnsT1T2=="MRC;VSa/MRC;VSh/MRC - MRC;VSa/MRC;VSh/MRC"  |
BaseT1T2$EstTrnsT1T2=="MSC;VSa/MSC;VSh/MSC - MSC;VSa/MSC;VSh/MSC"  |
BaseT1T2$EstTrnsT1T2=="MSCC;VSa/MSCC;VSh/MSCC - MSCC;VSa/MSCC;VSh/MSCC"  |
BaseT1T2$EstTrnsT1T2=="MSN;VSa/MSN;VSh/MSN - MSN;VSa/MSN;VSh/MSN"  |
BaseT1T2$EstTrnsT1T2=="MST;SBC;SBK;SBS;VPI;VSA/SBC;VSA/SBK;VSA/SBS - MST;SBC;SBK;SBS;VPI;VSA/SBC;VSA/SBK;VSA/SBS"  |
BaseT1T2$EstTrnsT1T2=="PC;PH;PI;PN;PY;VS;VSa/PH;VSa/PN;VSa/PY;VSa/VS;VSA/VS;VSa/VW;VSh/PH;VSh/PN;VSh/PY;VSh/VS;VSh/VW;VSI;VW - PC;PH;PI;PN;PY;VS;VSa/PH;VSa/PN;VSa/PY;VSa/VS;VSA/VS;VSa/VW;VSh/PH;VSh/PN;VSh/PY;VSh/VS;VSh/VW;VSI;VW"  |
BaseT1T2$EstTrnsT1T2=="PT;VM;VSA/PT;VSA/VM - PT;VM;VSA/PT;VSA/VM"  |
BaseT1T2$EstTrnsT1T2=="SAP;SMP;VSA/SAP;VSA/SMP - SAP;SMP;VSA/SAP;VSA/SMP"  |
BaseT1T2$EstTrnsT1T2=="SAQ;VSA/SAQ - SAQ;VSA/SAQ"  |
BaseT1T2$EstTrnsT1T2=="SBQ;SBQP;SG;SMQ;VPN;VSA/SBQ;VSA/SBQP;VSA/SG;VSA/SMQ;VSA/VPN - SBQ;SBQP;SG;SMQ;VPN;VSA/SBQ;VSA/SBQP;VSA/SG;VSA/SMQ;VSA/VPN"  |
BaseT1T2$EstTrnsT1T2=="SMC;SMS;VSA/SMC;VSA/SMS - SMC;SMS;VSA/SMC;VSA/SMS"  |
BaseT1T2$EstTrnsT1T2=="VA - VA"  |
BaseT1T2$EstTrnsT1T2=="VD;VSa/VD;VSh/VD - VD;VSa/VD;VSh/VD"  |
BaseT1T2$EstTrnsT1T2=="VH;VSa/VH;VSa/VY;VSh/VH;VSh/VY;VY - VH;VSa/VH;VSa/VY;VSh/VH;VSh/VY;VY"  |
BaseT1T2$EstTrnsT1T2=="VHH;VSa/VHH;VSh/VHH - VHH;VSa/VHH;VSh/VHH"  |
BaseT1T2$EstTrnsT1T2=="VSa/BA;VSa/BB;VSa/BG;VSa/BJ;VSa/BP;VSa/BPQ;VSa/BQ;VSa/BQP;VSa/BS;VSa/MJ;VSa/MK;VSa/MKE;VSa/ML;VSa/MSM;VSh/BA;VSh/BB;VSh/BG;VSh/BJ;VSh/BP;VSh/BPQ;VSh/BQ;VSh/BQP;VSh/BS;VSh/MJ;VSh/MK;VSh/MKE;VSh/MSM - VSa/BA;VSa/BB;VSa/BG;VSa/BJ;VSa/BP;VSa/BPQ;VSa/BQ;VSa/BQP;VSa/BS;VSa/MJ;VSa/MK;VSa/MKE;VSa/ML;VSa/MSM;VSh/BA;VSh/BB;VSh/BG;VSh/BJ;VSh/BP;VSh/BPQ;VSh/BQ;VSh/BQP;VSh/BS;VSh/MJ;VSh/MK;VSh/MKE;VSh/MSM"  |
BaseT1T2$EstTrnsT1T2=="Sa/BM;VSa/PT;VSa/SAP;VSa/SAQ;VSa/SBP;VSa/SBQ;VSa/SBQP;VSa/SG;VSa/SMP;VSa/SMQ;VSa/VM;VSa/VPN;VSh/BM;VSh/PT;VSh/SAP;VSh/SAQ;VSh/SBP;VSh/SBQ;VSh/SBQP;VSh/SG;VSh/SMP;VSh/SMQ;VSh/VM;VSh/VPN - VSa/BM;VSa/PT;VSa/SAP;VSa/SAQ;VSa/SBP;VSa/SBQ;VSa/SBQP;VSa/SG;VSa/SMP;VSa/SMQ;VSa/VM;VSa/VPN;VSh/BM;VSh/PT;VSh/SAP;VSh/SAQ;VSh/SBP;VSh/SBQ;VSh/SBQP;VSh/SG;VSh/SMP;VSh/SMQ;VSh/VM;VSh/VPN"  |
BaseT1T2$EstTrnsT1T2=="VSa/MST;VSa/SBC;VSa/SBK;VSa/SBS;VSa/SMC;VSa/SMS;VSh/MST;VSh/SBC;VSh/SBK;VSh/SBS;VSh/SMC;VSh/SMS - VSa/MST;VSa/SBC;VSa/SBK;VSa/SBS;VSa/SMC;VSa/SMS;VSh/MST;VSh/SBC;VSh/SBK;VSh/SBS;VSh/SMC;VSh/SMS"  |
BaseT1T2$EstTrnsT1T2=="VSa/VU;VSh/VU;VU - VSa/VU;VSh/VU;VU"  |
BaseT1T2$EstTrnsT1T2=="VT - VT" ,]
}
#Se identifica el ?rea de cada estrato
#Se identifica el Estrato
Estrato<-substr(x = AreasEstratos[,AREAS_ESTRATOS_KEY],
start = 1, stop =as.integer(gregexpr("-",AreasEstratos[,AREAS_ESTRATOS_KEY]))-2)
AreaHa<-AreasEstratos$areas_cves4_cves5_pmn
AreasEstratos<-data.frame(Estrato,AreaHa)
#####################################Se imputa el ?rea de muestreo a nivel de sitio################################
ai=rep(0.04,nrow(BaseT1T2))
t1=BaseT1T2$FechaT1
t2=BaseT1T2$FechaT2
conglomerado=BaseT1T2$folio.x
estrato=BaseT1T2$EstTrnsT1T2
y_t1=BaseT1T2$CarbAerVivT1
y_t2=BaseT1T2$CarbAerVivT2
#rm(BaseT1T2)
resultados = 0
resultados=Cambios(y_t1=y_t1, y_t2=y_t2, t1=t1, t2=t2, conglomerado=conglomerado,
estrato=estrato, ai=ai, AreasEstratos=AreasEstratos)
View(AreasEstratos)
fe_variable_gui="carbono_arboles"
lcc_type_gui="BUR"
lcc_type_gui="MADMEX"
UI setting")
print(fe_variable_gui)
print(lcc_type_gui)
FE_VAR = fe_variable_gui
if (lcc_type_gui == "BUR") {
AreasEstratos<-inputData@AreasEstratosBUR
EstratosBUR<-inputData@EstratosBUR
EstratosIPCC<-inputData@Estratos_BUR_IPCC
AREAS_ESTRATOS_KEY = "cves4_cves5_pmn"
ESTRATOS_IPCC = "pf_redd_ipcc_2003"
ESTRATO1_KEY = "clave_pmn4"
ESTRATO2_KEY = "clave_pmn5"
} else if (lcc_type_gui == "MADMEX") {
AreasEstratos<-inputData@AreasEstratosMADMEX
EstratosBUR<-inputData@EstratosMADMEX
EstratosIPCC<-inputData@EstratosMADMEX_IPCC
AREAS_ESTRATOS_KEY = "madmex_05_10"
ESTRATOS_IPCC = "pf_redd_ipcc_2003"
ESTRATO1_KEY = "madmex_05"
ESTRATO2_KEY = "madmex_10"
}
BaseT1<-inputData@BaseT1
BaseT2<-inputData@BaseT2
BaseT1<-BaseT1[!(is.na(BaseT1$folio)),]
BaseT2<-BaseT2[!(is.na(BaseT2$folio)),]
BaseT1_orig<-BaseT1
BaseVars = getAllVariables(BaseT1_orig)
##############################Se crean bases de "T1" y "T2 s?lo con las variables de inter?s"###################################
fe_variable=0
if (fe_variable_gui %in% names(BaseVars)) {
print (paste("Using EF variable:", fe_variable_gui, " index:", BaseVars[[fe_variable_gui]]))
BaseT1dep<-data.frame(folio=BaseT1$folio, sitioT1=BaseT1$sitio, FechaT1=BaseT1$levantamiento_fecha_ejecucion,
tipificacionT1=BaseT1$tipificacion, carbono_arbolesT1=BaseT1[,fe_variable_gui])
BaseT2dep<-data.frame(folio=BaseT2$folio, sitioT2=BaseT2$sitio, FechaT2=BaseT2$levantamiento_fecha_ejecucion,
tipificacionT2=BaseT2$tipificacion, carbono_arbolesT2=BaseT2[,fe_variable_gui])
} else {
print(paste("Cannot find EF variable:",fe_variable_gui))
df <- data.frame(test=character())
return(new("ResultSet",
result=df,
module="Estimadores de razón",
variable=FE_VAR,
status=FALSE))
}
##############################En cada base se cre una variable de "Conglomerado-Sito"###################################
BaseT1dep$CongSitioT1<-paste(as.character(BaseT1dep$folio),"-",as.character(BaseT1dep$sitioT1))
BaseT2dep$CongSitioT2<-paste(as.character(BaseT2dep$folio),"-",as.character(BaseT2dep$sitioT2))
##################################Se unen las bases "BaseT1dep" y "BaseT2dep"#######################################
BaseT1T2<- merge(BaseT1dep, BaseT2dep, by.x = "CongSitioT1", by.y = "CongSitioT2",all=TRUE)
###################Se identifica el estrato "del BUR" al que pertenece cada sitio en T1 y t2#######################
#Se seleccionan las variables de inter?s de la base de "Estratos"
EstratosBURdep<-data.frame(folio=EstratosBUR$numnal, sitio=EstratosBUR$sitio, EstratoSlV=EstratosBUR[,ESTRATO1_KEY],
EstratoSV=EstratosBUR[,ESTRATO2_KEY])
#En la base "EstratosBURdep" se crea una nueva variable de "Cong-Sitio"
EstratosBURdep$CongSitio<-paste(as.character(EstratosBURdep$folio),"-",as.character(EstratosBURdep$sitio))
#Se unen las bases "BaseT1T2" y "EstratosBURdep"
BaseT1T2<- merge(BaseT1T2, EstratosBURdep, by.x = "CongSitioT1", by.y = "CongSitio",all=TRUE)
###################Se identifica el estrato "del IPCC" al que pertenece cada sitio en T1 y t2#######################
BaseT1T2<- merge(BaseT1T2, EstratosIPCC, by.x = "EstratoSlV", by.y = "pf_redd_clave_subcat_leno_pri_sec",all=TRUE)
#############################Se filtran los sitios reportados como "Iniciales" en T1 y T2############################
#se filtra todas las UMP cuya "tipificaci?n" es "Inicial", "Reemplazo" o "Monitoreo" en T1
BaseT1T2=BaseT1T2[BaseT1T2$tipificacionT1=="Inicial" |
#              BaseT1T2$tipificacionT1=="Reemplazo" |
BaseT1T2$tipificacionT1=="Monitoreo",]
#se filtra todas las USM cuya "tipificaci?n" es "Inicial", "Reemplazo" o "Omitido-Remuestreo" en T2
BaseT1T2=BaseT1T2[BaseT1T2$tipificacionT2=="Inicial" |
#              BaseT1T2$tipificacionT2=="Reemplazo" |
BaseT1T2$tipificacionT2=="Omitido-Remuestreo" & BaseT1T2$tipificacionT1=="Monitoreo" & BaseT1T2[,ESTRATOS_IPCC]=="Praderas",]
######################Se filtran las "Tierras Forestales" o "Praderas" definidas por el IPCC########################
BaseT1T2=BaseT1T2[BaseT1T2[,ESTRATOS_IPCC]=="Tierras Forestales" | BaseT1T2[,ESTRATOS_IPCC]=="Praderas",]
#############Se imputan los 0 en los conglomerdos reportados "Monitoreo" y que ten?an "Pradera" en T1 y T2#########
BaseT1T2$CarbAerVivT1<-ifelse(BaseT1T2$tipificacionT1=="Monitoreo" & BaseT1T2[,ESTRATOS_IPCC]=="Praderas",0,
as.numeric(as.character(BaseT1T2$carbono_arbolesT1)))
BaseT1T2$CarbAerVivT2<-ifelse(BaseT1T2$tipificacionT1=="Monitoreo" & BaseT1T2[,ESTRATOS_IPCC]=="Praderas"&
BaseT1T2$tipificacionT2=="Omitido-Remuestreo",0, as.numeric(as.character(BaseT1T2$carbono_arbolesT2)))
##############Se filtran los sitios que en T1 y/o en T2 contienen valores "NA" en el carbono estimado#############
#Se filtran todos los "NA" de la variable "CarbAerViv" en T1
BaseT1T2<-BaseT1T2[!(is.na(BaseT1T2$CarbAerVivT1)),]
#Se filtran todos los "NA" de la variable "CarbAerVivT2correg" en T2
BaseT1T2<-BaseT1T2[!(is.na(BaseT1T2$CarbAerVivT2)),]
##############################Se filtran las transiciones de las zonas de permanencia###############################
#Se crea una variable de "Estratos de Transici?n"
BaseT1T2$EstTrnsT1T2<-paste(as.character(BaseT1T2$EstratoSlV),"-",as.character(BaseT1T2$EstratoSV))
#Se fltran los sitios que no son de permanencia
if (lcc_type_gui == "BUR") {
BaseT1T2=BaseT1T2[
BaseT1T2$EstTrnsT1T2=="ACUI - ACUI"  |
BaseT1T2$EstTrnsT1T2=="AGR - AGR"  |
BaseT1T2$EstTrnsT1T2=="AH - AH"  |
BaseT1T2$EstTrnsT1T2=="BC - BC"  |
BaseT1T2$EstTrnsT1T2=="BCO/P - BCO/P"  |
BaseT1T2$EstTrnsT1T2=="BCO/S - BCO/S"  |
BaseT1T2$EstTrnsT1T2=="BE/P - BE/P"  |
BaseT1T2$EstTrnsT1T2=="BE/S - BE/S"  |
BaseT1T2$EstTrnsT1T2=="BM/P - BM/P"  |
BaseT1T2$EstTrnsT1T2=="BM/S - BM/S"  |
BaseT1T2$EstTrnsT1T2=="EOTL/P - EOTL/P"  |
BaseT1T2$EstTrnsT1T2=="EOTL/S - EOTL/S"  |
BaseT1T2$EstTrnsT1T2=="EOTnL/P - EOTnL/P"  |
BaseT1T2$EstTrnsT1T2=="H2O - H2O"  |
BaseT1T2$EstTrnsT1T2=="MXL/P - MXL/P"  |
BaseT1T2$EstTrnsT1T2=="MXL/S - MXL/S"  |
BaseT1T2$EstTrnsT1T2=="MXnL/P - MXnL/P"  |
BaseT1T2$EstTrnsT1T2=="MXnL/S - MXnL/S"  |
BaseT1T2$EstTrnsT1T2=="OT - OT"  |
BaseT1T2$EstTrnsT1T2=="P - P"  |
BaseT1T2$EstTrnsT1T2=="SC/P - SC/P"  |
BaseT1T2$EstTrnsT1T2=="SC/S - SC/S"  |
BaseT1T2$EstTrnsT1T2=="SP/P - SP/P"  |
BaseT1T2$EstTrnsT1T2=="SP/S - SP/S"  |
BaseT1T2$EstTrnsT1T2=="SSC/P - SSC/P"  |
BaseT1T2$EstTrnsT1T2=="SSC/S - SSC/S"  |
BaseT1T2$EstTrnsT1T2=="VHL/P - VHL/P"  |
BaseT1T2$EstTrnsT1T2=="VHL/S - VHL/S"  |
BaseT1T2$EstTrnsT1T2=="VHnL/P - VHnL/P",]
} else if (lcc_type_gui == "MADMEX") {
BaseT1T2=BaseT1T2[
BaseT1T2$EstTrnsT1T2=="ACUI;H2O - ACUI;H2O"  |
BaseT1T2$EstTrnsT1T2=="ADV;DV - ADV;DV"  |
BaseT1T2$EstTrnsT1T2=="AH;ZU - AH;ZU"  |
BaseT1T2$EstTrnsT1T2=="BA;BB;BS;VSA/BA;VSA/BB;VSA/BS - BA;BB;BS;VSA/BA;VSA/BB;VSA/BS"  |
BaseT1T2$EstTrnsT1T2=="BC;BI - BC;BI"  |
BaseT1T2$EstTrnsT1T2=="BG;BQ;BQP;VSA/BG;VSA/BQ;VSA/BQP - BG;BQ;BQP;VSA/BG;VSA/BQ;VSA/BQP"  |
BaseT1T2$EstTrnsT1T2=="BJ;BP;BPQ;MJ;VSA/BJ;VSA/BP;VSA/BPQ - BJ;BP;BPQ;MJ;VSA/BJ;VSA/BP;VSA/BPQ"  |
BaseT1T2$EstTrnsT1T2=="BM;SBP;VSA/BM;VSA/SBP - BM;SBP;VSA/BM;VSA/SBP"  |
BaseT1T2$EstTrnsT1T2=="HA;HAP;HAS;HP;HS;HSP;RA;RAP;RAS;RP;RS;RSP;TA;TAP;TAS;TP;TS;TSP - HA;HAP;HAS;HP;HS;HSP;RA;RAP;RAS;RP;RS;RSP;TA;TAP;TAS;TP;TS;TSP"  |
BaseT1T2$EstTrnsT1T2=="MC;VSa/MC;VSh/MC - MC;VSa/MC;VSh/MC"  |
BaseT1T2$EstTrnsT1T2=="MDM;MKX;VG;VSa/MDM;VSa/MKX;VSa/VG;VSh/MDM;VSh/MKX;VSh/VG - MDM;MKX;VG;VSa/MDM;VSa/MKX;VSa/VG;VSh/MDM;VSh/MKX;VSh/VG"  |
BaseT1T2$EstTrnsT1T2=="MDR;VSa/MDR;VSh/MDR - MDR;VSa/MDR;VSh/MDR"  |
BaseT1T2$EstTrnsT1T2=="MET;VSa/MET;VSh/MET - MET;VSa/MET;VSh/MET"  |
BaseT1T2$EstTrnsT1T2=="MK;MKE;MSM;VSA/MK;VSA/MKE;VSA/MSM - MK;MKE;MSM;VSA/MK;VSA/MKE;VSA/MSM"  |
BaseT1T2$EstTrnsT1T2=="ML - ML"  |
BaseT1T2$EstTrnsT1T2=="MRC;VSa/MRC;VSh/MRC - MRC;VSa/MRC;VSh/MRC"  |
BaseT1T2$EstTrnsT1T2=="MSC;VSa/MSC;VSh/MSC - MSC;VSa/MSC;VSh/MSC"  |
BaseT1T2$EstTrnsT1T2=="MSCC;VSa/MSCC;VSh/MSCC - MSCC;VSa/MSCC;VSh/MSCC"  |
BaseT1T2$EstTrnsT1T2=="MSN;VSa/MSN;VSh/MSN - MSN;VSa/MSN;VSh/MSN"  |
BaseT1T2$EstTrnsT1T2=="MST;SBC;SBK;SBS;VPI;VSA/SBC;VSA/SBK;VSA/SBS - MST;SBC;SBK;SBS;VPI;VSA/SBC;VSA/SBK;VSA/SBS"  |
BaseT1T2$EstTrnsT1T2=="PC;PH;PI;PN;PY;VS;VSa/PH;VSa/PN;VSa/PY;VSa/VS;VSA/VS;VSa/VW;VSh/PH;VSh/PN;VSh/PY;VSh/VS;VSh/VW;VSI;VW - PC;PH;PI;PN;PY;VS;VSa/PH;VSa/PN;VSa/PY;VSa/VS;VSA/VS;VSa/VW;VSh/PH;VSh/PN;VSh/PY;VSh/VS;VSh/VW;VSI;VW"  |
BaseT1T2$EstTrnsT1T2=="PT;VM;VSA/PT;VSA/VM - PT;VM;VSA/PT;VSA/VM"  |
BaseT1T2$EstTrnsT1T2=="SAP;SMP;VSA/SAP;VSA/SMP - SAP;SMP;VSA/SAP;VSA/SMP"  |
BaseT1T2$EstTrnsT1T2=="SAQ;VSA/SAQ - SAQ;VSA/SAQ"  |
BaseT1T2$EstTrnsT1T2=="SBQ;SBQP;SG;SMQ;VPN;VSA/SBQ;VSA/SBQP;VSA/SG;VSA/SMQ;VSA/VPN - SBQ;SBQP;SG;SMQ;VPN;VSA/SBQ;VSA/SBQP;VSA/SG;VSA/SMQ;VSA/VPN"  |
BaseT1T2$EstTrnsT1T2=="SMC;SMS;VSA/SMC;VSA/SMS - SMC;SMS;VSA/SMC;VSA/SMS"  |
BaseT1T2$EstTrnsT1T2=="VA - VA"  |
BaseT1T2$EstTrnsT1T2=="VD;VSa/VD;VSh/VD - VD;VSa/VD;VSh/VD"  |
BaseT1T2$EstTrnsT1T2=="VH;VSa/VH;VSa/VY;VSh/VH;VSh/VY;VY - VH;VSa/VH;VSa/VY;VSh/VH;VSh/VY;VY"  |
BaseT1T2$EstTrnsT1T2=="VHH;VSa/VHH;VSh/VHH - VHH;VSa/VHH;VSh/VHH"  |
BaseT1T2$EstTrnsT1T2=="VSa/BA;VSa/BB;VSa/BG;VSa/BJ;VSa/BP;VSa/BPQ;VSa/BQ;VSa/BQP;VSa/BS;VSa/MJ;VSa/MK;VSa/MKE;VSa/ML;VSa/MSM;VSh/BA;VSh/BB;VSh/BG;VSh/BJ;VSh/BP;VSh/BPQ;VSh/BQ;VSh/BQP;VSh/BS;VSh/MJ;VSh/MK;VSh/MKE;VSh/MSM - VSa/BA;VSa/BB;VSa/BG;VSa/BJ;VSa/BP;VSa/BPQ;VSa/BQ;VSa/BQP;VSa/BS;VSa/MJ;VSa/MK;VSa/MKE;VSa/ML;VSa/MSM;VSh/BA;VSh/BB;VSh/BG;VSh/BJ;VSh/BP;VSh/BPQ;VSh/BQ;VSh/BQP;VSh/BS;VSh/MJ;VSh/MK;VSh/MKE;VSh/MSM"  |
BaseT1T2$EstTrnsT1T2=="Sa/BM;VSa/PT;VSa/SAP;VSa/SAQ;VSa/SBP;VSa/SBQ;VSa/SBQP;VSa/SG;VSa/SMP;VSa/SMQ;VSa/VM;VSa/VPN;VSh/BM;VSh/PT;VSh/SAP;VSh/SAQ;VSh/SBP;VSh/SBQ;VSh/SBQP;VSh/SG;VSh/SMP;VSh/SMQ;VSh/VM;VSh/VPN - VSa/BM;VSa/PT;VSa/SAP;VSa/SAQ;VSa/SBP;VSa/SBQ;VSa/SBQP;VSa/SG;VSa/SMP;VSa/SMQ;VSa/VM;VSa/VPN;VSh/BM;VSh/PT;VSh/SAP;VSh/SAQ;VSh/SBP;VSh/SBQ;VSh/SBQP;VSh/SG;VSh/SMP;VSh/SMQ;VSh/VM;VSh/VPN"  |
BaseT1T2$EstTrnsT1T2=="VSa/MST;VSa/SBC;VSa/SBK;VSa/SBS;VSa/SMC;VSa/SMS;VSh/MST;VSh/SBC;VSh/SBK;VSh/SBS;VSh/SMC;VSh/SMS - VSa/MST;VSa/SBC;VSa/SBK;VSa/SBS;VSa/SMC;VSa/SMS;VSh/MST;VSh/SBC;VSh/SBK;VSh/SBS;VSh/SMC;VSh/SMS"  |
BaseT1T2$EstTrnsT1T2=="VSa/VU;VSh/VU;VU - VSa/VU;VSh/VU;VU"  |
BaseT1T2$EstTrnsT1T2=="VT - VT" ,]
}
#Se identifica el ?rea de cada estrato
#Se identifica el Estrato
Estrato<-substr(x = AreasEstratos[,AREAS_ESTRATOS_KEY],
start = 1, stop =as.integer(gregexpr("-",AreasEstratos[,AREAS_ESTRATOS_KEY]))-2)
AreaHa<-AreasEstratos$areas_cves4_cves5_pmn
AreasEstratos<-data.frame(Estrato,AreaHa)
#####################################Se imputa el ?rea de muestreo a nivel de sitio################################
ai=rep(0.04,nrow(BaseT1T2))
t1=BaseT1T2$FechaT1
t2=BaseT1T2$FechaT2
conglomerado=BaseT1T2$folio.x
estrato=BaseT1T2$EstTrnsT1T2
y_t1=BaseT1T2$CarbAerVivT1
y_t2=BaseT1T2$CarbAerVivT2
#rm(BaseT1T2)
resultados = 0
View(AreasEstratos)
View(AreasEstratos)
Estrato
inputData@AreasEstratosMADMEX
AreasEstratos<-inputData@AreasEstratosMADMEX
View(AreasEstratos)
Estrato<-substr(x = AreasEstratos[,AREAS_ESTRATOS_KEY],
start = 1, stop =as.integer(gregexpr("-",AreasEstratos[,AREAS_ESTRATOS_KEY]))-2)
Estrato
Estrato<-substr(x = AreasEstratos[,AREAS_ESTRATOS_KEY],
start = 1, stop =as.integer(gregexpr("-",AreasEstratos[,AREAS_ESTRATOS_KEY]))-1)
Estrato
source("calc_changes.R")
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","BUR")))
library(logging)
basicConfig()
setwd("/Volumes/SSD2go_tw/conafor/reporting/cliente_delta_carbon")
DEBUG=TRUE
source("tools.R")
source("db_access.R")
source("calc_changes.R")
inputData = getBaseData()
FULL = !DEBUG
runModule <- function(fe_variable_gui, lcc_type_gui) {
data=calcChanges(fe_variable_gui, lcc_type_gui, inputData)
DB_SCHEME="client_output"
db_table_name = c(DB_SCHEME, paste0("FE_delta_",fe_variable_gui,"_",lcc_type_gui))
if (data@status) {
print (data)
success = storeResults(db_table_name, data@result)
} else {
success=FALSE
}
print(success)
return(success)
}
if (DEBUG) {
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","MADMEX")))
print(warnings())
} else if (FULL) {
#loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","BUR")))
#loginfo (paste("Status of FE calculation:",runModule("carbono_raices_por_sitio","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_raices_por_sitio","BUR")))
#loginfo (paste("Status of FE calculation:",runModule("carbono_muertospie","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_muertospie","BUR")))
#loginfo (paste("Status of FE calculation:",runModule("carbono_tocones","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_tocones","BUR")))
print(warnings())
}
library(logging)
basicConfig()
setwd("/Volumes/SSD2go_tw/conafor/reporting/cliente_delta_carbon")
DEBUG=FALSE
source("tools.R")
source("db_access.R")
source("calc_changes.R")
inputData = getBaseData()
FULL = !DEBUG
runModule <- function(fe_variable_gui, lcc_type_gui) {
data=calcChanges(fe_variable_gui, lcc_type_gui, inputData)
DB_SCHEME="client_output"
db_table_name = c(DB_SCHEME, paste0("FE_delta_",fe_variable_gui,"_",lcc_type_gui))
if (data@status) {
print (data)
success = storeResults(db_table_name, data@result)
} else {
success=FALSE
}
print(success)
return(success)
}
if (DEBUG) {
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","MADMEX")))
print(warnings())
} else if (FULL) {
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_raices_por_sitio","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_raices_por_sitio","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_muertospie","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_muertospie","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_tocones","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_tocones","BUR")))
print(warnings())
}
library(logging)
basicConfig()
setwd("/Volumes/SSD2go_tw/conafor/reporting/cliente_delta_carbon")
DEBUG=FALSE
source("tools.R")
source("db_access.R")
source("calc_changes.R")
inputData = getBaseData()
FULL = !DEBUG
runModule <- function(fe_variable_gui, lcc_type_gui) {
data=calcChanges(fe_variable_gui, lcc_type_gui, inputData)
DB_SCHEME="client_output"
db_table_name = c(DB_SCHEME, paste0("FE_delta_",fe_variable_gui,"_",lcc_type_gui))
if (data@status) {
success = storeResults(db_table_name, data@result)
} else {
success=FALSE
}
print(success)
return(success)
}
if (DEBUG) {
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","MADMEX")))
print(warnings())
} else if (FULL) {
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_arboles","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_raices_por_sitio","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_raices_por_sitio","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_muertospie","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_muertospie","BUR")))
loginfo (paste("Status of FE calculation:",runModule("carbono_tocones","MADMEX")))
loginfo (paste("Status of FE calculation:",runModule("carbono_tocones","BUR")))
print(warnings())
}
warning()
